<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="8" total="51" passed="43">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="348791" started-at="2021-05-19T10:44:25Z" finished-at="2021-05-19T10:50:14Z">
    <groups>
      <group name="regression">
        <method signature="DashboardTest.DashboardHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="DashboardHeadingTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.LogoHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="LogoHeadingTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.ReadDashboardDataTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="ReadDashboardDataTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.UsernameTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="UsernameTest" class="Testcases.DashboardTest"/>
        <method signature="LoginTest.LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderExcelTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderManualTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderExcelTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.registerNewmemeberTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="registerNewmemeberTest" class="Testcases.LoginTest"/>
        <method signature="LogoutTest.logoutmessagetest()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="logoutmessagetest" class="Testcases.LogoutTest"/>
        <method signature="UsersTest.AddUserAlertMessageTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserAlertMessageTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserCancelButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserCancelButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserFormTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserFormTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddValidUserTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddValidUserTest" class="Testcases.UsersTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="DashboardTest.DashboardHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="DashboardHeadingTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.LogoHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="LogoHeadingTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.UsernameTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="UsernameTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.dashboardLinkTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="dashboardLinkTest" class="Testcases.DashboardTest"/>
        <method signature="LoginTest.EmailfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="EmailfieldTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.PasswordfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="PasswordfieldTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.SignButtonEnableTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignButtonEnableTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.SignInButtonDisplayTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignInButtonDisplayTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.ValidLoginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="ValidLoginTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.registerNewmemeberTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="registerNewmemeberTest" class="Testcases.LoginTest"/>
        <method signature="LogoutTest.logoutmessagetest()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="logoutmessagetest" class="Testcases.LogoutTest"/>
        <method signature="OperatorTest.OperatorsHeadingTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="OperatorsHeadingTest" class="Testcases.OperatorTest"/>
        <method signature="UsersTest.AddUserAlertMessageTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserAlertMessageTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserCancelButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserCancelButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserFormTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserFormTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserHeadingTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddValidUserTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddValidUserTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.ReadUserListTableDataTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="ReadUserListTableDataTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.UserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserHeadingTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.UserListHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserListHeadingTest" class="Testcases.UsersTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="DashboardTest.ReadDashboardDataTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="ReadDashboardDataTest" class="Testcases.DashboardTest"/>
        <method signature="DashboardTest.dashboardLinkTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="dashboardLinkTest" class="Testcases.DashboardTest"/>
        <method signature="LoginTest.EmailfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="EmailfieldTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.FailureTest11()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="FailureTest11" class="Testcases.LoginTest"/>
        <method signature="LoginTest.FailureTest22()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="FailureTest22" class="Testcases.LoginTest"/>
        <method signature="LoginTest.PasswordfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="PasswordfieldTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.SignButtonEnableTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignButtonEnableTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.SignInButtonDisplayTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignInButtonDisplayTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.ValidLoginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="ValidLoginTest" class="Testcases.LoginTest"/>
        <method signature="LoginTest.registerNewmemeberTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="registerNewmemeberTest" class="Testcases.LoginTest"/>
        <method signature="LogoutTest.logoutmessagetest()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="logoutmessagetest" class="Testcases.LogoutTest"/>
        <method signature="OperatorTest.OperatorsHeadingTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="OperatorsHeadingTest" class="Testcases.OperatorTest"/>
        <method signature="OperatorTest.Operators_ListTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="Operators_ListTest" class="Testcases.OperatorTest"/>
        <method signature="OperatorTest.ReadOperatorListTableTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="ReadOperatorListTableTest" class="Testcases.OperatorTest"/>
        <method signature="UsersTest.AddUserAlertMessageTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserAlertMessageTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserCancelButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserCancelButtonTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserFormTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserFormTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserHeadingTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.AddValidUserTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddValidUserTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.ReadUserListTableDataTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="ReadUserListTableDataTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.StateOptionTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="StateOptionTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.UserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserHeadingTest" class="Testcases.UsersTest"/>
        <method signature="UsersTest.UserListHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserListHeadingTest" class="Testcases.UsersTest"/>
      </group> <!-- sanity -->
    </groups>
    <test name="AllClassesTestNG" duration-ms="348791" started-at="2021-05-19T10:44:25Z" finished-at="2021-05-19T10:50:14Z">
      <class name="Testcases.UsersTest">
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3763" started-at="2021-05-19T16:17:50Z" finished-at="2021-05-19T16:17:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="AddUserAlertMessageTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserAlertMessageTest" duration-ms="1833" started-at="2021-05-19T16:17:54Z" finished-at="2021-05-19T16:17:56Z">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63465}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 45a4e35b9ce87e95d7e4d79bda055d0c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63465}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 45a4e35b9ce87e95d7e4d79bda055d0c
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
	at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy12.click(Unknown Source)
	at Pages.Users.AddAlertMessage(Users.java:175)
	at Testcases.UsersTest.AddUserAlertMessageTest(UsersTest.java:174)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserAlertMessageTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="733" started-at="2021-05-19T16:17:56Z" finished-at="2021-05-19T16:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserAlertMessageTest status=FAILURE method=UsersTest.AddUserAlertMessageTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3721" started-at="2021-05-19T16:17:57Z" finished-at="2021-05-19T16:18:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserButtonTest" duration-ms="218" started-at="2021-05-19T16:18:00Z" finished-at="2021-05-19T16:18:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserButtonTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="743" started-at="2021-05-19T16:18:01Z" finished-at="2021-05-19T16:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserButtonTest status=SUCCESS method=UsersTest.AddUserButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4939" started-at="2021-05-19T16:18:01Z" finished-at="2021-05-19T16:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserCancelButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserCancelButtonTest" duration-ms="2635" started-at="2021-05-19T16:18:06Z" finished-at="2021-05-19T16:18:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserCancelButtonTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="724" started-at="2021-05-19T16:18:09Z" finished-at="2021-05-19T16:18:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserCancelButtonTest status=SUCCESS method=UsersTest.AddUserCancelButtonTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4572" started-at="2021-05-19T16:18:10Z" finished-at="2021-05-19T16:18:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserFormTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserFormTest" duration-ms="270" started-at="2021-05-19T16:18:14Z" finished-at="2021-05-19T16:18:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserFormTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="783" started-at="2021-05-19T16:18:14Z" finished-at="2021-05-19T16:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserFormTest status=SUCCESS method=UsersTest.AddUserFormTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3641" started-at="2021-05-19T16:18:15Z" finished-at="2021-05-19T16:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserHeadingTest" duration-ms="270" started-at="2021-05-19T16:18:19Z" finished-at="2021-05-19T16:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="690" started-at="2021-05-19T16:18:19Z" finished-at="2021-05-19T16:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserHeadingTest status=SUCCESS method=UsersTest.AddUserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3836" started-at="2021-05-19T16:18:20Z" finished-at="2021-05-19T16:18:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" duration-ms="3147" started-at="2021-05-19T16:18:24Z" data-provider="ExcelData" finished-at="2021-05-19T16:18:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.345678456E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test11@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Maharashtra]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12345.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="799" started-at="2021-05-19T16:18:27Z" finished-at="2021-05-19T16:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderExcelTest status=SUCCESS method=UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3901" started-at="2021-05-19T16:18:28Z" finished-at="2021-05-19T16:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" duration-ms="3193" started-at="2021-05-19T16:18:32Z" data-provider="ExcelData" finished-at="2021-05-19T16:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.345678456E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test22@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12345.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="729" started-at="2021-05-19T16:18:35Z" finished-at="2021-05-19T16:18:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderExcelTest status=SUCCESS method=UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4357" started-at="2021-05-19T16:18:36Z" finished-at="2021-05-19T16:18:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" duration-ms="3050" started-at="2021-05-19T16:18:40Z" data-provider="ExcelData" finished-at="2021-05-19T16:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.345678456E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test33@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[HP]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12345.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="722" started-at="2021-05-19T16:18:43Z" finished-at="2021-05-19T16:18:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderExcelTest status=SUCCESS method=UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4162" started-at="2021-05-19T16:18:44Z" finished-at="2021-05-19T16:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderExcelTest" duration-ms="3125" started-at="2021-05-19T16:18:48Z" data-provider="ExcelData" finished-at="2021-05-19T16:18:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test44]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.345678456E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test44@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Punjab]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12345.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="1058" started-at="2021-05-19T16:18:51Z" finished-at="2021-05-19T16:18:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderExcelTest status=SUCCESS method=UsersTest.AddUserWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4988" started-at="2021-05-19T16:18:52Z" finished-at="2021-05-19T16:18:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" duration-ms="12725" started-at="2021-05-19T16:18:57Z" data-provider="Data" finished-at="2021-05-19T16:19:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at Pages.Users.AddUser(Users.java:146)
	at Testcases.UsersTest.AddUserWithDataProviderManualTest(UsersTest.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="1681" started-at="2021-05-19T16:19:10Z" finished-at="2021-05-19T16:19:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderManualTest status=FAILURE method=UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3886" started-at="2021-05-19T16:19:11Z" finished-at="2021-05-19T16:19:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" duration-ms="3329" started-at="2021-05-19T16:19:15Z" data-provider="Data" finished-at="2021-05-19T16:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Payal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[payal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="773" started-at="2021-05-19T16:19:19Z" finished-at="2021-05-19T16:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderManualTest status=SUCCESS method=UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="4426" started-at="2021-05-19T16:19:19Z" finished-at="2021-05-19T16:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" duration-ms="3068" started-at="2021-05-19T16:19:24Z" data-provider="Data" finished-at="2021-05-19T16:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Maharashtra]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="793" started-at="2021-05-19T16:19:27Z" finished-at="2021-05-19T16:19:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderManualTest status=SUCCESS method=UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3488" started-at="2021-05-19T16:19:28Z" finished-at="2021-05-19T16:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" duration-ms="3214" started-at="2021-05-19T16:19:31Z" data-provider="Data" finished-at="2021-05-19T16:19:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[HP]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="762" started-at="2021-05-19T16:19:34Z" finished-at="2021-05-19T16:19:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderManualTest status=SUCCESS method=UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3788" started-at="2021-05-19T16:19:35Z" finished-at="2021-05-19T16:19:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddUserWithDataProviderManualTest" duration-ms="3184" started-at="2021-05-19T16:19:39Z" data-provider="Data" finished-at="2021-05-19T16:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Punjab]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="744" started-at="2021-05-19T16:19:42Z" finished-at="2021-05-19T16:19:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserWithDataProviderManualTest status=SUCCESS method=UsersTest.AddUserWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3525" started-at="2021-05-19T16:19:43Z" finished-at="2021-05-19T16:19:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="AddValidUserTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="AddValidUserTest" duration-ms="3269" started-at="2021-05-19T16:19:46Z" finished-at="2021-05-19T16:19:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddValidUserTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="959" started-at="2021-05-19T16:19:50Z" finished-at="2021-05-19T16:19:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddValidUserTest status=SUCCESS method=UsersTest.AddValidUserTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="3685" started-at="2021-05-19T16:19:51Z" finished-at="2021-05-19T16:19:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="ReadUserListTableDataTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="ReadUserListTableDataTest" duration-ms="866" started-at="2021-05-19T16:19:54Z" finished-at="2021-05-19T16:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReadUserListTableDataTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="687" started-at="2021-05-19T16:19:55Z" finished-at="2021-05-19T16:19:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReadUserListTableDataTest status=SUCCESS method=UsersTest.ReadUserListTableDataTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="5072" started-at="2021-05-19T16:19:56Z" finished-at="2021-05-19T16:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="StateOptionTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="StateOptionTest" duration-ms="413" started-at="2021-05-19T16:20:01Z" finished-at="2021-05-19T16:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StateOptionTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="827" started-at="2021-05-19T16:20:01Z" finished-at="2021-05-19T16:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StateOptionTest status=SUCCESS method=UsersTest.StateOptionTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="5389" started-at="2021-05-19T16:20:02Z" finished-at="2021-05-19T16:20:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="UserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserHeadingTest" duration-ms="47" started-at="2021-05-19T16:20:08Z" finished-at="2021-05-19T16:20:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="682" started-at="2021-05-19T16:20:08Z" finished-at="2021-05-19T16:20:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserHeadingTest status=SUCCESS method=UsersTest.UserHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="SetUp" is-config="true" duration-ms="5071" started-at="2021-05-19T16:20:08Z" finished-at="2021-05-19T16:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="UserListHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="UserListHeadingTest" duration-ms="48" started-at="2021-05-19T16:20:13Z" finished-at="2021-05-19T16:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserListHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.UsersTest@305fd85d]" name="TearDown" is-config="true" duration-ms="705" started-at="2021-05-19T16:20:13Z" finished-at="2021-05-19T16:20:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserListHeadingTest status=SUCCESS method=UsersTest.UserListHeadingTest()[pri:0, instance:Testcases.UsersTest@305fd85d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- Testcases.UsersTest -->
      <class name="Testcases.LoginTest">
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3502" started-at="2021-05-19T16:15:21Z" finished-at="2021-05-19T16:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="EmailfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="EmailfieldTest" duration-ms="331" started-at="2021-05-19T16:15:25Z" finished-at="2021-05-19T16:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailfieldTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="681" started-at="2021-05-19T16:15:25Z" finished-at="2021-05-19T16:15:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmailfieldTest status=SUCCESS method=LoginTest.EmailfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3050" started-at="2021-05-19T16:15:26Z" finished-at="2021-05-19T16:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="FailureTest11()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="FailureTest11" duration-ms="1" started-at="2021-05-19T16:15:29Z" finished-at="2021-05-19T16:15:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Testcases.LoginTest.FailureTest11(LoginTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailureTest11 -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="725" started-at="2021-05-19T16:15:29Z" finished-at="2021-05-19T16:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FailureTest11 status=FAILURE method=LoginTest.FailureTest11()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3029" started-at="2021-05-19T16:15:30Z" finished-at="2021-05-19T16:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="FailureTest22()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="FailureTest22" duration-ms="1" started-at="2021-05-19T16:15:33Z" finished-at="2021-05-19T16:15:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at Testcases.LoginTest.FailureTest22(LoginTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailureTest22 -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="727" started-at="2021-05-19T16:15:33Z" finished-at="2021-05-19T16:15:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FailureTest22 status=FAILURE method=LoginTest.FailureTest22()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2948" started-at="2021-05-19T16:15:35Z" finished-at="2021-05-19T16:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderExcelTest" duration-ms="451" started-at="2021-05-19T16:15:38Z" data-provider="ExcelData" finished-at="2021-05-19T16:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[payal@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456789.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="708" started-at="2021-05-19T16:15:39Z" finished-at="2021-05-19T16:15:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderExcelTest status=SUCCESS method=LoginTest.LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3599" started-at="2021-05-19T16:15:40Z" finished-at="2021-05-19T16:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderExcelTest" duration-ms="436" started-at="2021-05-19T16:15:43Z" data-provider="ExcelData" finished-at="2021-05-19T16:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testgmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456789.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="717" started-at="2021-05-19T16:15:44Z" finished-at="2021-05-19T16:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderExcelTest status=SUCCESS method=LoginTest.LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2965" started-at="2021-05-19T16:15:44Z" finished-at="2021-05-19T16:15:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderExcelTest" duration-ms="415" started-at="2021-05-19T16:15:47Z" data-provider="ExcelData" finished-at="2021-05-19T16:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiran@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="1222" started-at="2021-05-19T16:15:48Z" finished-at="2021-05-19T16:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderExcelTest status=SUCCESS method=LoginTest.LoginWithDataProviderExcelTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2929" started-at="2021-05-19T16:15:49Z" finished-at="2021-05-19T16:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderManualTest" duration-ms="10439" started-at="2021-05-19T16:15:52Z" data-provider="Data" finished-at="2021-05-19T16:16:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='logo-lg']/b"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63250}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ceda8cba63a4a90472f2c3452511c5c9
*** Element info: {Using=xpath, value=//*[@class='logo-lg']/b}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='logo-lg']/b"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63250}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ceda8cba63a4a90472f2c3452511c5c9
*** Element info: {Using=xpath, value=//*[@class='logo-lg']/b}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.getText(Unknown Source)
	at Pages.Dashboard.LogoHeading(Dashboard.java:41)
	at Testcases.LoginTest.LoginWithDataProviderManualTest(LoginTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="852" started-at="2021-05-19T16:16:02Z" finished-at="2021-05-19T16:16:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderManualTest status=FAILURE method=LoginTest.LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3264" started-at="2021-05-19T16:16:03Z" finished-at="2021-05-19T16:16:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderManualTest" duration-ms="10458" started-at="2021-05-19T16:16:06Z" data-provider="Data" finished-at="2021-05-19T16:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiran123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='logo-lg']/b"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63262}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ceccb87d0f4960f93fe646e5b47de9e7
*** Element info: {Using=xpath, value=//*[@class='logo-lg']/b}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='logo-lg']/b"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63262}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ceccb87d0f4960f93fe646e5b47de9e7
*** Element info: {Using=xpath, value=//*[@class='logo-lg']/b}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.getText(Unknown Source)
	at Pages.Dashboard.LogoHeading(Dashboard.java:41)
	at Testcases.LoginTest.LoginWithDataProviderManualTest(LoginTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="749" started-at="2021-05-19T16:16:17Z" finished-at="2021-05-19T16:16:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderManualTest status=FAILURE method=LoginTest.LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3734" started-at="2021-05-19T16:16:18Z" finished-at="2021-05-19T16:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="LoginWithDataProviderManualTest" duration-ms="753" started-at="2021-05-19T16:16:21Z" data-provider="Data" finished-at="2021-05-19T16:16:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiran@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="1249" started-at="2021-05-19T16:16:22Z" finished-at="2021-05-19T16:16:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginWithDataProviderManualTest status=SUCCESS method=LoginTest.LoginWithDataProviderManualTest(java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3387" started-at="2021-05-19T16:16:23Z" finished-at="2021-05-19T16:16:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="PasswordfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="PasswordfieldTest" duration-ms="267" started-at="2021-05-19T16:16:27Z" finished-at="2021-05-19T16:16:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PasswordfieldTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="691" started-at="2021-05-19T16:16:27Z" finished-at="2021-05-19T16:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PasswordfieldTest status=SUCCESS method=LoginTest.PasswordfieldTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3633" started-at="2021-05-19T16:16:28Z" finished-at="2021-05-19T16:16:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderExcelTest" duration-ms="3025" started-at="2021-05-19T16:16:31Z" data-provider="ExcelData" finished-at="2021-05-19T16:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.8345672256E10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="754" started-at="2021-05-19T16:16:34Z" finished-at="2021-05-19T16:16:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderExcelTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2796" started-at="2021-05-19T16:16:35Z" finished-at="2021-05-19T16:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderExcelTest" duration-ms="2873" started-at="2021-05-19T16:16:38Z" data-provider="ExcelData" finished-at="2021-05-19T16:16:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Payal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.8345672256E10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Payal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4573456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="995" started-at="2021-05-19T16:16:41Z" finished-at="2021-05-19T16:16:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderExcelTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2602" started-at="2021-05-19T16:16:42Z" finished-at="2021-05-19T16:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderExcelTest" duration-ms="2804" started-at="2021-05-19T16:16:44Z" data-provider="ExcelData" finished-at="2021-05-19T16:16:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Darshan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.8345672256E10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Darshan@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[23456.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderExcelTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="805" started-at="2021-05-19T16:16:47Z" finished-at="2021-05-19T16:16:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderExcelTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderExcelTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2693" started-at="2021-05-19T16:16:48Z" finished-at="2021-05-19T16:16:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" duration-ms="1675" started-at="2021-05-19T16:16:51Z" data-provider="Data" finished-at="2021-05-19T16:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63333}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0fc2dedefaa5de51e7b03e6b084b3f9f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63333}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0fc2dedefaa5de51e7b03e6b084b3f9f
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:932)
	at Pages.LoginPage.RegisterNewMember(LoginPage.java:114)
	at Testcases.LoginTest.RegisterNewMemberWithDataProviderManualTest(LoginTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="826" started-at="2021-05-19T16:16:52Z" finished-at="2021-05-19T16:16:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderManualTest status=FAILURE method=LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2520" started-at="2021-05-19T16:16:53Z" finished-at="2021-05-19T16:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" duration-ms="2831" started-at="2021-05-19T16:16:56Z" data-provider="Data" finished-at="2021-05-19T16:16:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Payal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[payal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="791" started-at="2021-05-19T16:16:59Z" finished-at="2021-05-19T16:16:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderManualTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="4213" started-at="2021-05-19T16:16:59Z" finished-at="2021-05-19T16:17:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" duration-ms="2748" started-at="2021-05-19T16:17:04Z" data-provider="Data" finished-at="2021-05-19T16:17:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="794" started-at="2021-05-19T16:17:06Z" finished-at="2021-05-19T16:17:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderManualTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2767" started-at="2021-05-19T16:17:07Z" finished-at="2021-05-19T16:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" duration-ms="2804" started-at="2021-05-19T16:17:10Z" data-provider="Data" finished-at="2021-05-19T16:17:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="721" started-at="2021-05-19T16:17:13Z" finished-at="2021-05-19T16:17:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderManualTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2785" started-at="2021-05-19T16:17:14Z" finished-at="2021-05-19T16:17:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="RegisterNewMemberWithDataProviderManualTest" duration-ms="2840" started-at="2021-05-19T16:17:16Z" data-provider="Data" finished-at="2021-05-19T16:17:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9834567856]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterNewMemberWithDataProviderManualTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="744" started-at="2021-05-19T16:17:19Z" finished-at="2021-05-19T16:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisterNewMemberWithDataProviderManualTest status=SUCCESS method=LoginTest.RegisterNewMemberWithDataProviderManualTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3647" started-at="2021-05-19T16:17:20Z" finished-at="2021-05-19T16:17:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="SignButtonEnableTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignButtonEnableTest" duration-ms="47" started-at="2021-05-19T16:17:24Z" finished-at="2021-05-19T16:17:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignButtonEnableTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="715" started-at="2021-05-19T16:17:24Z" finished-at="2021-05-19T16:17:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignButtonEnableTest status=SUCCESS method=LoginTest.SignButtonEnableTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2560" started-at="2021-05-19T16:17:24Z" finished-at="2021-05-19T16:17:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="SignInButtonDisplayTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SignInButtonDisplayTest" duration-ms="289" started-at="2021-05-19T16:17:27Z" finished-at="2021-05-19T16:17:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignInButtonDisplayTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="733" started-at="2021-05-19T16:17:27Z" finished-at="2021-05-19T16:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignInButtonDisplayTest status=SUCCESS method=LoginTest.SignInButtonDisplayTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="2894" started-at="2021-05-19T16:17:28Z" finished-at="2021-05-19T16:17:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="ValidLoginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="ValidLoginTest" duration-ms="2557" started-at="2021-05-19T16:17:31Z" finished-at="2021-05-19T16:17:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidLoginTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="772" started-at="2021-05-19T16:17:33Z" finished-at="2021-05-19T16:17:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidLoginTest status=SUCCESS method=LoginTest.ValidLoginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3024" started-at="2021-05-19T16:17:34Z" finished-at="2021-05-19T16:17:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="loginTest" duration-ms="561" started-at="2021-05-19T16:17:37Z" finished-at="2021-05-19T16:17:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="769" started-at="2021-05-19T16:17:38Z" finished-at="2021-05-19T16:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=LoginTest.loginTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="SetUp" is-config="true" duration-ms="3311" started-at="2021-05-19T16:17:38Z" finished-at="2021-05-19T16:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="registerNewmemeberTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="registerNewmemeberTest" duration-ms="2840" started-at="2021-05-19T16:17:42Z" finished-at="2021-05-19T16:17:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewmemeberTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="TearDown" is-config="true" duration-ms="793" started-at="2021-05-19T16:17:45Z" finished-at="2021-05-19T16:17:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNewmemeberTest status=SUCCESS method=LoginTest.registerNewmemeberTest()[pri:0, instance:Testcases.LoginTest@2d8f65a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- Testcases.LoginTest -->
      <class name="Testcases.LogoutTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="setup" is-config="true" duration-ms="4115" started-at="2021-05-19T16:17:45Z" finished-at="2021-05-19T16:17:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="logoutmessagetest()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="logoutmessagetest" duration-ms="36" started-at="2021-05-19T16:17:50Z" finished-at="2021-05-19T16:17:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutmessagetest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="TearDown" is-config="true" duration-ms="706" started-at="2021-05-19T16:17:50Z" finished-at="2021-05-19T16:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutmessagetest status=SUCCESS method=LogoutTest.logoutmessagetest()[pri:0, instance:Testcases.LogoutTest@34cd072c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- Testcases.LogoutTest -->
      <class name="Testcases.OperatorTest">
        <test-method status="PASS" signature="Setup()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="Setup" is-config="true" duration-ms="4615" started-at="2021-05-19T16:15:07Z" finished-at="2021-05-19T16:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="OperatorsHeadingTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="OperatorsHeadingTest" duration-ms="50" started-at="2021-05-19T16:15:11Z" finished-at="2021-05-19T16:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OperatorsHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.OperatorTest@458c1321]" name="TearDown" is-config="true" duration-ms="717" started-at="2021-05-19T16:15:11Z" finished-at="2021-05-19T16:15:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OperatorsHeadingTest status=SUCCESS method=OperatorTest.OperatorsHeadingTest()[pri:0, instance:Testcases.OperatorTest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="Setup" is-config="true" duration-ms="3533" started-at="2021-05-19T16:15:12Z" finished-at="2021-05-19T16:15:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="Operators_ListTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="Operators_ListTest" duration-ms="64" started-at="2021-05-19T16:15:16Z" finished-at="2021-05-19T16:15:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Operators_ListTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.OperatorTest@458c1321]" name="TearDown" is-config="true" duration-ms="735" started-at="2021-05-19T16:15:16Z" finished-at="2021-05-19T16:15:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Operators_ListTest status=SUCCESS method=OperatorTest.Operators_ListTest()[pri:0, instance:Testcases.OperatorTest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="Setup" is-config="true" duration-ms="3440" started-at="2021-05-19T16:15:16Z" finished-at="2021-05-19T16:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="ReadOperatorListTableTest()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="ReadOperatorListTableTest" duration-ms="695" started-at="2021-05-19T16:15:20Z" finished-at="2021-05-19T16:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReadOperatorListTableTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.OperatorTest@458c1321]" name="TearDown" is-config="true" duration-ms="722" started-at="2021-05-19T16:15:21Z" finished-at="2021-05-19T16:15:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReadOperatorListTableTest status=SUCCESS method=OperatorTest.ReadOperatorListTableTest()[pri:0, instance:Testcases.OperatorTest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- Testcases.OperatorTest -->
      <class name="Testcases.DashboardTest">
        <test-method status="PASS" signature="name()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="name" is-config="true" duration-ms="169" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="name()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="name" is-config="true" duration-ms="7" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="name()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="name" is-config="true" duration-ms="7" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="name()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="name" is-config="true" duration-ms="6" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="name()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="name" is-config="true" duration-ms="5" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="SetUp" is-config="true" duration-ms="5802" started-at="2021-05-19T16:14:25Z" finished-at="2021-05-19T16:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="DashboardHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="DashboardHeadingTest" duration-ms="101" started-at="2021-05-19T16:14:31Z" finished-at="2021-05-19T16:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DashboardHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.DashboardTest@11438d26]" name="TearDown" is-config="true" duration-ms="769" started-at="2021-05-19T16:14:31Z" finished-at="2021-05-19T16:14:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DashboardHeadingTest status=SUCCESS method=DashboardTest.DashboardHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="SetUp" is-config="true" duration-ms="3777" started-at="2021-05-19T16:14:32Z" finished-at="2021-05-19T16:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LogoHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="LogoHeadingTest" duration-ms="51" started-at="2021-05-19T16:14:36Z" finished-at="2021-05-19T16:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogoHeadingTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.DashboardTest@11438d26]" name="TearDown" is-config="true" duration-ms="693" started-at="2021-05-19T16:14:36Z" finished-at="2021-05-19T16:14:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogoHeadingTest status=SUCCESS method=DashboardTest.LogoHeadingTest()[pri:0, instance:Testcases.DashboardTest@11438d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="SetUp" is-config="true" duration-ms="3509" started-at="2021-05-19T16:14:37Z" finished-at="2021-05-19T16:14:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="ReadDashboardDataTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="ReadDashboardDataTest" duration-ms="12517" started-at="2021-05-19T16:14:40Z" finished-at="2021-05-19T16:14:53Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='content']//div[@class='row']/div[0]/div/div/h3"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63108}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 6a801e8a232505518cce8e477eb5c9fa
*** Element info: {Using=xpath, value=//*[@class='content']//div[@class='row']/div[0]/div/div/h3}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='content']//div[@class='row']/div[0]/div/div/h3"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-A6EPA854', ip: '127.0.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\HP\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:63108}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 6a801e8a232505518cce8e477eb5c9fa
*** Element info: {Using=xpath, value=//*[@class='content']//div[@class='row']/div[0]/div/div/h3}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at Pages.Dashboard.ReadDashBoardData(Dashboard.java:67)
	at Testcases.DashboardTest.ReadDashboardDataTest(DashboardTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReadDashboardDataTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.DashboardTest@11438d26]" name="TearDown" is-config="true" duration-ms="1211" started-at="2021-05-19T16:14:53Z" finished-at="2021-05-19T16:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReadDashboardDataTest status=FAILURE method=DashboardTest.ReadDashboardDataTest()[pri:0, instance:Testcases.DashboardTest@11438d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="SetUp" is-config="true" duration-ms="6629" started-at="2021-05-19T16:14:54Z" finished-at="2021-05-19T16:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="UsernameTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="UsernameTest" duration-ms="96" started-at="2021-05-19T16:15:00Z" finished-at="2021-05-19T16:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UsernameTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.DashboardTest@11438d26]" name="TearDown" is-config="true" duration-ms="836" started-at="2021-05-19T16:15:01Z" finished-at="2021-05-19T16:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UsernameTest status=SUCCESS method=DashboardTest.UsernameTest()[pri:0, instance:Testcases.DashboardTest@11438d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="SetUp" is-config="true" duration-ms="4301" started-at="2021-05-19T16:15:01Z" finished-at="2021-05-19T16:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="dashboardLinkTest()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="dashboardLinkTest" duration-ms="313" started-at="2021-05-19T16:15:06Z" finished-at="2021-05-19T16:15:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashboardLinkTest -->
        <test-method status="PASS" signature="TearDown(org.testng.ITestResult)[pri:0, instance:Testcases.DashboardTest@11438d26]" name="TearDown" is-config="true" duration-ms="759" started-at="2021-05-19T16:15:06Z" finished-at="2021-05-19T16:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dashboardLinkTest status=SUCCESS method=DashboardTest.dashboardLinkTest()[pri:0, instance:Testcases.DashboardTest@11438d26] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:Testcases.DashboardTest@11438d26]" name="closeReport" is-config="true" duration-ms="1075" started-at="2021-05-19T16:20:15Z" finished-at="2021-05-19T16:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:Testcases.LoginTest@2d8f65a4]" name="closeReport" is-config="true" duration-ms="10" started-at="2021-05-19T16:20:16Z" finished-at="2021-05-19T16:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:Testcases.LogoutTest@34cd072c]" name="closeReport" is-config="true" duration-ms="6" started-at="2021-05-19T16:20:16Z" finished-at="2021-05-19T16:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:Testcases.OperatorTest@458c1321]" name="closeReport" is-config="true" duration-ms="1" started-at="2021-05-19T16:20:16Z" finished-at="2021-05-19T16:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:Testcases.UsersTest@305fd85d]" name="closeReport" is-config="true" duration-ms="2" started-at="2021-05-19T16:20:16Z" finished-at="2021-05-19T16:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.DashboardTest -->
    </test> <!-- AllClassesTestNG -->
  </suite> <!-- Suite -->
</testng-results>
